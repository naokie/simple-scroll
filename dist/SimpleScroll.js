// Generated by CoffeeScript 1.9.2
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  slice = [].slice;

(function(factory) {
  if (typeof module === 'object' && typeof module.exports === 'object') {
    return module.exports = factory(require('jquery'), window, document);
  } else {
    return factory(jQuery, window, document);
  }
})(function($, window, document) {
  var SimpleScroll;
  SimpleScroll = (function() {
    SimpleScroll.prototype.defaults = {
      offset: 0,
      duration: 800,
      easing: 'swing'
    };

    function SimpleScroll(el, options) {
      this.scroll = bind(this.scroll, this);
      this.options = $.extend({}, this.defaults, options);
      this.$el = $(el);
      this.init();
      this;
    }

    SimpleScroll.prototype.init = function() {
      return this.$el.on('click', this.scroll);
    };

    SimpleScroll.prototype.scroll = function(e) {
      var _href, _top;
      e.preventDefault();
      _href = $(e.currentTarget).attr('href');
      _top = $(_href).offset().top + this.options.offset;
      return $('html, body').stop().animate({
        scrollTop: _top
      }, {
        duration: this.options.duration,
        easing: this.options.easing
      });
    };

    return SimpleScroll;

  })();
  return $.fn.extend({
    SimpleScroll: function() {
      var args, option;
      option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return this.each(function() {
        var $this, data;
        $this = $(this);
        data = $this.data('SimpleScroll');
        if (!data) {
          $this.data('SimpleScroll', (data = new SimpleScroll(this, option)));
        }
        if (typeof option === 'string') {
          return data[option].apply(data, args);
        }
      });
    }
  });
});
